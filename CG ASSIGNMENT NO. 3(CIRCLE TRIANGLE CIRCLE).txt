#include <graphics.h>
#include <math.h>
#include <iostream>
 
void circle(int x, int y, int xc, int yc) {
  putpixel(xc + x, yc + y, WHITE);
  putpixel(xc + x, yc - y, WHITE);
  putpixel(xc - x, yc + y, WHITE);
  putpixel(xc - x, yc - y, WHITE);
  putpixel(xc + y, yc + x, WHITE);
  putpixel(xc + y, yc - x, WHITE);
  putpixel(xc - y, yc + x, WHITE);
  putpixel(xc - y, yc - x, WHITE);
}
 
void bresencircle(int xc, int yc, int r) {
  int x = 0, y = r;
  float dp = 3 - (2 * r);
  putpixel(x, y, WHITE);
  while (x <= y) {
    if (dp <= 0) {
      dp = dp + (4 * x) + 6;
      x++;
    } else {
      dp = dp + (4 * (x - y)) + 10;
      x++;
      y--;
    }
    circle(x, y, xc, yc);
  };
}
 
void drawline(float x1, float y1, float x2, float y2) {
  float xnew, ynew;
  int steps, dx = (x2 - x1), dy = (y2 - y1);
 
  if (abs(dx) > abs(dy))
    steps = abs(dx);
  else
    steps = abs(dy);
 
  float xinc = (float)dx / steps, yinc = (float)dy / steps;
  float x = x1, y = y1;
 
  putpixel(x, y, WHITE);
 
  int a, b;
 
  for (int i = 1; i <= steps; i++) {
    x = (x + xinc);
    y = (y + yinc);
    a = x + 0.5;
    b = y + 0.5;
 
    putpixel(a, b, WHITE);
  }
}
 
int main() {
  int xc, yc, r;
 
  std::cout << "\n Enter the coordinates of centre and radius of outer circle "
               "(xc,yc,r): "
            << std::endl;
  std::cin >> xc >> yc >> r;
 
  int gd = DETECT, gm;
  initgraph(&gd, &gm, NULL);
 
  drawline(xc, (yc - r), (xc - (r * 0.866025403784438646)), (yc + (r / 2)));
  drawline(xc, (yc - r), (xc + (r * 0.866025403784438646)), (yc + (r / 2)));
  drawline((xc - (r * 0.866)), (yc + (r / 2)),
  (xc + (r * 0.866025403784438646)), (yc + (r / 2)));
 
  bresencircle(xc, yc, r / 2);
  bresencircle(xc, yc, r);
 
  getch();
  closegraph();
 
  return (0);
}